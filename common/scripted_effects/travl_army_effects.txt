# Add or reassign officers to a newly created army
travl_add_created_army_officers_effect = {
	save_temporary_scope_as = army_owner

	if = {
		limit = {
			any_army = {
				location = $ARMY$.location
				NOT = { this = $ARMY$ }
				has_variable_list = travl_army_officers
			}
		}

		# There are other armies in this army's location that have officers
		# We assume this army was split from another one, choose the one with most officers
		ordered_army = {
			limit = {
				location = $ARMY$.location
				NOT = { this = $ARMY$ }
				has_variable_list = travl_army_officers
			}
			order_by = travl_number_of_army_officers_value
			save_temporary_scope_as = other_army
		}

		# Reassign some of the other army officers to the new army
		scope:other_army = {
			every_in_list = {
				variable = travl_army_officers
				random = {
					chance = 0
					modifier = {
						add = travl_reassign_officer_chance
					}
					travl_remove_army_officer_effect = yes
					travl_add_army_officer_effect = { ARMY = $ARMY$ }
				}
			}
		}
	}
	else = {
		# There are no other armies of this owner in the army location that have officers
		# We assume it's a newly spawned army
		if = {
			limit = {
				any_army = {
					has_variable = travl_spawned
					NOT = { this = $ARMY$ }
					has_variable_list = travl_army_officers
				}
			}

			# There are other newly spawned armies that have officers, choose the one with most officers
			ordered_army = {
				limit = {
					has_variable = travl_spawned
					NOT = { this = $ARMY$ }
					has_variable_list = travl_army_officers
				}
				order_by = travl_number_of_army_officers_value
				save_temporary_scope_as = other_army
			}

			# Reassign some of the other army officers to the new army
			scope:other_army = {
				every_in_list = {
					variable = travl_army_officers
					random = {
						chance = 0
						modifier = {
							add = travl_reassign_officer_chance
						}
						travl_remove_army_officer_effect = yes
						travl_add_army_officer_effect = { ARMY = $ARMY$ }
						set_location = { location = $ARMY$.location stick_to_location = yes }
					}
				}
			}
		}
		else = {
			# There are no other spawned armies that have officers
			# Move all idle officers to the new army
			travl_get_valid_officers_effect = { OFFICERS = valid_officers }
			ordered_in_list = {
				list = valid_officers
				limit = {
					NOT = { has_variable = travl_officer_army }
					trigger_if = {
						limit = { exists = commanding_army }
						commanding_army = $ARMY$
					}
				}
				order_by = martial
				max = {
					value = max_number_of_knights
					subtract = travl_number_of_officers_value
				}
				check_range_bounds = no
				travl_add_army_officer_effect = { ARMY = $ARMY$ }
				set_location = { location = $ARMY$.location stick_to_location = yes }
			}
		}

		# Mark this army as a newly spawned army
		$ARMY$ = {
			set_variable = { name = travl_spawned value = yes days = 1 }
		}
	}
}

# Remove or reassign officers from deleted armies
travl_remove_deleted_army_officers_effect = {
	save_temporary_scope_as = army_owner

	every_in_list = {
		variable = travl_officers
		limit = {
			NOT = { exists = var:travl_officer_army }
		}

		if = {
			limit = {
				location = {
					any_army_in_location = {
						army_owner = scope:army_owner
					}
				}
			}

			# There are other armies of this owner in this officer's location,
			# choose the one with least officers
			location = {
				ordered_army_in_location = {
					limit = { army_owner = scope:army_owner }
					order_by = {
						value = travl_number_of_army_officers_value
						multiply = -1
					}
					save_temporary_scope_as = other_army
				}
			}

			# Reassign this officer to the other army
			travl_add_army_officer_effect = { ARMY = scope:other_army }
		}
		else = {
			# There are no other armies of this owner in this officer's location
			# Remove this officer from any armies and send them home
			travl_remove_army_officer_effect = yes
			set_location_to_default = yes
		}
	}
}

# Ensure that this army commander is valid for it
travl_ensure_valid_army_commander_effect = {
	save_temporary_scope_as = current_army

	# Assign the army commander character as officer to the given army
	# if they are a valid officer for its owner
	army_commander ?= {
		travl_assign_army_officer_if_valid_effect = { ARMY = scope:current_army }
	}

	# Remove the current commander if it's not valid for this army
	if = {
		limit = {
			army_commander ?= {
				NOT = {
					travl_is_valid_army_commander_trigger = { ARMY = scope:current_army }
				}
			}
		}

		travl_remove_army_commander_effect = yes
	}

	# If there is no commander, assign the best commander available for this army
	if = {
		limit = {
			NOT = { exists = army_commander }
		}

		travl_get_best_army_commander_effect = yes
		if = {
			limit = { exists = scope:best_commander }

			travl_assign_army_commander_effect = { COMMANDER = scope:best_commander }
		}
	}
}

# Assign this character as an officer to the given army if they are a valid officer for its owner
travl_assign_army_officer_if_valid_effect = {
	if = {
		limit = {
			travl_is_valid_officer_trigger = { ARMY_OWNER = $ARMY$.army_owner }
			NAND = {
				has_variable = travl_officer_army
				var:travl_officer_army ?= $ARMY$
			}
			location = $ARMY$.location
		}
		travl_remove_army_officer_effect = yes
		travl_add_army_officer_effect = { ARMY = $ARMY$ }
		set_location = { location = $ARMY$.location stick_to_location = yes }
	}
}

# Get the army character with the highest martial score that can serve as a commander
travl_get_best_army_commander_effect = {
	save_temporary_scope_as = current_army
	clear_saved_scope = best_commander
	travl_get_army_characters_effect = { CHARACTERS = available_commanders }
	ordered_in_list = {
		list = available_commanders
		limit = {
			can_be_commander_now_trigger = { ARMY_OWNER = scope:current_army.army_owner }
			travl_is_valid_army_commander_trigger = { ARMY = scope:current_army }
		}
		order_by = martial
		save_temporary_scope_as = best_commander
	}
}

# Move this army knights and officers to its location
travl_move_army_characters_effect = {
	travl_get_army_characters_effect = { CHARACTERS = army_characters }
	every_in_list = {
		list = army_characters
		limit = { is_travelling = no }
		set_location = { location = prev.location stick_to_location = yes }
	}
}

# Check validity of army officers
travl_check_army_officers_effect = {
	save_temporary_scope_as = current_army
	every_in_list = {
		variable = travl_army_officers
		limit = {
			NOT = {
				travl_is_valid_officer_trigger = { ARMY_OWNER = scope:current_army.army_owner }
			}
		}
		save_temporary_scope_as = officer
		scope:current_army.army_owner = {
			travl_debug_log_2_effect = {
				MSG = travl_debug_msg_invalid_army_officer
				NAME1 = officer TYPE1 = flag:character
				NAME2 = current_army TYPE2 = flag:army
			}
		}
	}
}

travl_get_valid_officers_effect = {
	save_temporary_scope_as = army_owner
	if = {
		limit = {
			travl_is_valid_officer_trigger = { ARMY_OWNER = scope:army_owner }
		}
		add_to_temporary_list = $OFFICERS$
	}
	every_vassal = {
		limit = {
			travl_is_valid_officer_trigger = { ARMY_OWNER = scope:army_owner }
		}
		add_to_temporary_list = $OFFICERS$
	}
	every_courtier = {
		limit = {
			travl_is_valid_officer_trigger = { ARMY_OWNER = scope:army_owner }
		}
		add_to_temporary_list = $OFFICERS$
	}
}

travl_get_army_characters_effect = {
	save_temporary_scope_as = current_army
	every_in_list = {
		variable = travl_army_officers
		add_to_temporary_list = $CHARACTERS$
	}
	army_owner = {
		every_knight = {
			limit = { knight_army ?= scope:current_army }
			add_to_temporary_list = $CHARACTERS$
		}
	}
}

travl_remove_army_commander_effect = {
	save_temporary_scope_as = current_army
	army_owner = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_removing_army_commander
			NAME1 = current_army TYPE1 = flag:army
		}
	}
	remove_commander = yes
}

travl_assign_army_commander_effect = {
	save_temporary_scope_as = current_army
	assign_commander = $COMMANDER$
	army_owner = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_assigning_army_commander
			NAME1 = current_army TYPE1 = flag:army
		}
	}
}

travl_add_army_officer_effect = {
	save_temporary_scope_as = officer

	# Maintain variables
	set_variable = { name = travl_officer_army value = $ARMY$ }
	var:travl_officer_army = {
		add_to_variable_list = { name = travl_army_officers target = scope:officer }
		army_owner = {
			add_to_variable_list = { name = travl_officers target = scope:officer }
		}
	}

	# Prevent leaving court and becomiing a knight
	add_character_flag = blocked_from_leaving
	if = {
		limit = { is_potential_knight = yes }
		set_knight_status = forbid
	}
}

travl_remove_army_officer_effect = {
	save_temporary_scope_as = officer

	# Maintain variables
	var:travl_officer_army ?= {
		remove_list_variable = { name = travl_army_officers target = scope:officer }
		army_owner = {
			remove_list_variable = { name = travl_officers target = scope:officer }
		}
	}
	remove_variable = travl_officer_army

	# Allow leaving court and becoming a knight
	remove_character_flag = blocked_from_leaving
	if = {
		limit = { is_potential_knight = yes }
		set_knight_status = allow
	}
}

