# Fired by the army pulse event when it detects that an army has been created
# root is the owner of the army
# scope:army is the army
travl_on_army_created = {
	effect = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_army_created
			NAME1 = army TYPE1 = flag:army
		}

		# Update ruler officers
		travl_update_officers_effect = yes

		# Remove or reassign officers from any deleted armies,
		# and send all idle officers home
		travl_remove_deleted_army_officers_effect = yes
		travl_return_idle_officers_effect = yes

		# Add or reassign officers to the newly created army
		travl_add_created_army_officers_effect = { ARMY = scope:army }

		# Ensure that army commanders are valid,
		# and move all army characters to this army's location
		scope:army = {
			travl_add_army_commander_as_officer_effect = yes
			travl_ensure_valid_army_knights_effect = yes
			travl_ensure_valid_army_commander_effect = yes
			travl_move_army_characters_effect = yes
		}

		travl_debug_log_army_status_effect = yes
	}
}

# Fired by the army pulse event when it detects that some armies have been deleted
# root is the owner of the army
travl_on_army_deleted = {
	effect = {
		travl_debug_log_effect = { MSG = travl_debug_msg_army_deleted }

		# Update ruler officers
		travl_update_officers_effect = yes

		# Remove or reassign officers from any deleted armies,
		# and send all idle officers home
		travl_remove_deleted_army_officers_effect = yes
		travl_return_idle_officers_effect = yes
	}
}

# Fired by the army pulse event when it detects that a ruler knights have changed
# root is the ruler
travl_on_knights_changed = {
	effect = {
		#travl_debug_log_effect = { MSG = travl_debug_msg_knights_changed }

		# Update ruler officers
		travl_update_officers_effect = yes

		# Remove or reassign officers from any deleted armies,
		# and send all idle officers home
		travl_remove_deleted_army_officers_effect = yes
		travl_return_idle_officers_effect = yes
	}
}

# Fired by the army pulse event when it detects that an army knights have changed
# root is the owner of the army
# scope:army is the army
travl_on_army_knights_changed = {
	effect = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_army_knights_changed
			NAME1 = army TYPE1 = flag:army
		}

		# Ensure that this army knights and commander are valid,
		# and move all army characters to this army's location
		scope:army = {
			travl_ensure_valid_army_knights_effect = yes
			travl_ensure_valid_army_commander_effect = yes
			travl_move_army_characters_effect = yes
		}

		travl_debug_log_army_status_effect = yes
	}
}

# Fired by the army pulse event when it detects that an army commander has changed
# root is the owner of the army
# scope:army is the army
travl_on_army_commander_changed = {
	effect = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_army_commander_changed
			NAME1 = army TYPE1 = flag:army
		}

		# Ensure that this army commander is valid
		scope:army = {
			travl_add_army_commander_as_officer_effect = yes
			travl_ensure_valid_army_commander_effect = yes
		}

		travl_debug_log_army_status_effect = yes
	}
}

# called for armies whenever they enter a province
# root is the owner of the army
# scope:army is the army
on_army_enter_province = {
	on_actions = { travl_on_army_enter_province }
}

travl_on_army_enter_province = {
	effect = {
		travl_debug_log_1_effect = {
			MSG = travl_debug_msg_army_entered_province
			NAME1 = army TYPE1 = flag:army
		}

		# Move all army characters to this army's location
		scope:army = {
			travl_move_army_characters_effect = yes
		}
	}
}
