namespace = travl_travel_danger

scripted_effect travl_travel_danger_0001_outcome_effect = {
	# Setup character effects
	travl_travel_danger_0001_$OUTCOME$_effect = yes

	# Send messages to potential recipients and apply character effects
	travl_event_apply_outcome_effect = {
		EVENT = travel_danger_0001
		OUTCOME = $OUTCOME$
		RECIPIENTS = recipients
		TRAVELERS = travelers
	}
}

scripted_effect travl_travel_danger_0001_a_success_effect = {
	scope:prowess_character = {
		travl_event_add_stress_effect = { TRAIT = craven VALUE = major }
		travl_event_add_prestige_effect = { VALUE = minor_prestige_value }
	}
}

scripted_effect travl_travel_danger_0001_a_failure_effect = {
	scope:prowess_character = {
		travl_event_add_stress_effect = { TRAIT = craven VALUE = major }
		random_list = {
			10 = {
				travl_event_death_effect = { REASON = death_fight KILLER = scope:bandit }
			}
			20 = {
				travl_event_add_trait_effect = { TRAIT = maimed }
			}
			70 = {
				travl_event_wound_effect = { REASON = fight }
			}
		}
	}
	travl_travel_danger_0001_failure_effect = yes
}

scripted_effect travl_travel_danger_0001_b_success_effect = {
	scope:diplomacy_character = {
		travl_event_add_prestige_effect = { VALUE = miniscule_prestige_value }
	}
}

scripted_effect travl_travel_danger_0001_b_failure_effect = {
	scope:diplomacy_character = {
		travl_event_remove_prestige_effect = { VALUE = minor_prestige_value }
	}
	travl_travel_danger_0001_failure_effect = yes
}

scripted_effect travl_travel_danger_0001_c_effect = {
	scope:gold_character = {
		travl_event_add_stress_effect = { TRAIT = greedy VALUE = medium }
		travl_event_pay_gold_effect = { TARGET = scope:bandit VALUE = minor_gold_value }
	}
}

scripted_effect travl_travel_danger_0001_d_effect = {
	travl_travel_danger_0001_failure_effect = yes
}

scripted_effect travl_travel_danger_0001_failure_effect = {
	every_in_list = {
		list = travelers
		random_list = {
			5 = {
				travl_event_death_effect = { REASON = death_fight KILLER = scope:bandit }
			}
			10 = {
				travl_event_add_trait_effect = { TRAIT = maimed }
			}
			25 = {
				travl_event_wound_effect = { REASON = fight }
			}
			10 = {
				travl_event_remove_prestige_effect = { VALUE = medium_prestige_value }
			}
			20 = {
				travl_event_remove_prestige_effect = { VALUE = minor_prestige_value }
			}
			10 = {
				travl_event_remove_gold_effect = { VALUE = minor_gold_value }
			}
			20 = {
				travl_event_remove_gold_effect = { VALUE = tiny_gold_value }
			}
		}
	}
}

# Danger: Bandits
travl_travel_danger.0001 = {
	type = character_event
	title = travl_travel_danger.0001.t
	desc = travl_travel_danger.0001.desc
	theme = travel_danger
	#hidden = yes

	left_portrait = {
		character = root
		animation = worry
	}
	right_portrait = {
		character = scope:bandit
		animation = marshal
	}

	trigger = {
		has_game_rule = travl_travel_events_enabled

		# Travel leader
		has_variable = travl_travel_leader
		var:travl_travel_leader = root

		# Available, traveling, adult, on land, and unplayable
		is_available_travelling_adult = yes
		is_location_valid_for_travel_event_on_land = yes
		is_playable_character = no

		# Danger types
		location = {
			OR = {
				travl_is_travel_danger_type_mountainous_terrain_trigger = {
					TRAVEL_PLAN = root.current_travel_plan
				}
				travel_danger_type = {
					travel_plan = root.current_travel_plan
					type = county_control
				}
			}
		}
	}

	cooldown = { months = 6 }

	immediate = {
		travl_debug_log_travel_event_effect = { MSG = travl_debug_msg_travel_danger_0001_t }

		# Get travelers and message recipients
		travl_event_get_travelers_effect = { TRAVELERS = travelers }
		travl_event_get_message_recipients_effect = { RECIPIENTS = recipients }

		# Find or create bandit character
		random_pool_character = {
			province = root.location
			limit = {
				exists = this
				is_available_ai_adult = yes
				prowess >= low_skill_rating
				diplomacy >= low_skill_rating
			}
			weight = {
				base = 10
				modifier = {
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = root.location.county.holder }
					add = 100
				}
			}
			save_scope_as = bandit
		}
		if = {
			limit = {
				NOT = { exists = scope:bandit }
			}
			create_character = {
				location = root.location
				template = bandit_character
				save_scope_as = bandit
			}
			scope:bandit = {
				move_to_pool = yes
			}
		}

		# Find relevant travelers
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				prowess >= low_skill_rating
			}
			order_by = prowess
			save_scope_as = prowess_character
		}
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				diplomacy >= low_skill_rating
			}
			order_by = diplomacy
			save_scope_as = diplomacy_character
		}
		ordered_in_list = {
			list = travelers
			limit = {
				is_available_travelling_adult = yes
				gold >= minor_gold_value
			}
			order_by = gold
			save_scope_as = gold_character
		}

		# Save location
		location = { save_scope_as = location }

		traveler_danger_xp_effect = {
			MIN = 3
			MAX = 6
		}
	}

	# Fight them (prowess challenge)
	option = {
		name = travl_travel_danger.0001.a

		trigger = {
			exists = scope:prowess_character
		}

		scope:prowess_character = {
			duel = {
				skill = prowess
				target = scope:bandit
				50 = {
					desc = travl_travel_danger.0001.a.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = a_success }
					}
				}
				50 = {
					desc = travl_travel_danger.0001.a.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = a_failure }
					}
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:prowess_character
				ai_boldness = 0.5 # stress: craven
				ai_vengefulness = 0.5
			}
		}
	}

	# Persuade them to let us pass (diplomacy challenge)
	option = {
		name = travl_travel_danger.0001.b

		trigger = {
			exists = scope:diplomacy_character
		}

		scope:diplomacy_character = {
			duel = {
				skill = diplomacy
				target = scope:bandit
				50 = {
					desc = travl_travel_danger.0001.b.success
					compare_modifier = {
						value = scope:duel_value
						multiplier = 3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = b_success }
					}
				}
				50 = {
					desc = travl_travel_danger.0001.b.failure
					compare_modifier = {
						value = scope:duel_value
						multiplier = -3.5
						min = -49
					}
					root = {
						travl_travel_danger_0001_outcome_effect = { OUTCOME = b_failure }
					}
				}
			}
		}

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:diplomacy_character
				ai_sociability = 0.5
				ai_boldness = 0.5
			}
		}
	}

	# Pay them off
	option = {
		name = travl_travel_danger.0001.c

		trigger = {
			exists = scope:gold_character
		}

		travl_travel_danger_0001_outcome_effect = { OUTCOME = c }

		ai_chance = {
			base = 100
			ai_value_modifier = {
				who = scope:gold_character
				ai_greed = -0.5 # stress: greedy
				ai_rationality = 0.5
			}
		}
	}

	# We are at their mercy...
	option = {
		name = travl_travel_danger.0001.d

		travl_travel_danger_0001_outcome_effect = { OUTCOME = d }

		ai_chance = {
			base = 1
		}
	}
}